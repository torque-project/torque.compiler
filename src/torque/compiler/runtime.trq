(ns torque.compiler.runtime
  (:require
    [torque.compiler.builtins :as builtin]
    [torque.compiler.emit :as emit]
    [torque.compiler.generators :as gen]))

(def printable    0)
(def ifn          43)
(def serializable 45)
(def pointer      46)

(defn ^:private binary-to-pointer [type]
  (->> (emit/define-fun! (str builtin/binary-type-name "_IPointerTarget_-intptr_1")
         emit/ValueP [(emit/ptr-of type)]
         (fn [fun]
           (emit/force-box (emit/get-field (emit/arg fun 0) 2))))
       (hash-map :arity 0 :value)
       (list)))

(defn ^:private emit-binary-type []
  ;; TODO: implement protocol methods
  (gen/type builtin/binary-type-name
    [{:type emit/int64    :name 'size :field-id 0}
     {:type emit/int8-ptr :name 'data :field-id 1}]
    (fn [type]
      [(gen/protocol* builtin/binary-type-name pointer (binary-to-pointer type))])))

(defn ^:private emit-array-type []
  ;; TODO: implement protocol methods
  (gen/type builtin/array-type-name
    [{:type emit/int64  :name 'size :field-id 0}
     {:type emit/ValueP :name 'data :field-id 1}]
    (fn [type]
      [])))

(defn rt0 []
  (emit/with-unit (emit/unit "__torque_rt0")
    (emit-binary-type)
    (emit-array-type)))
